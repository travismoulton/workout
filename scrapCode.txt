  const getAllWorkoutsAndStoreInFirebase = async () => {
    let next = `https://wger.de/api/v2/exercise/?language=2`;

    while (next) {
      await axios.get(next).then((res) => {
        console.log(res.data.next);
        for (let i = 0; i < res.data.results.length; i++) {
          axios.post(
            `https://workout-81691-default-rtdb.firebaseio.com/masterExerciseList.json`,
            res.data.results[i]
          );
        }
        next = res.data.next;
      });
    }
  };

  const getAllWorkoutsBtn = (
    <button onClick={getAllWorkoutsAndStoreInFirebase}>Get all workouts</button>
  );


    const deleteAllRoutinesContainingWorkout = async (firebaseId) => {
    const routinesToDelete = routines.filter((routine) =>
      routine.workouts.includes(firebaseId)
    );

    for (let i = 0; i < routinesToDelete.length; i++) {
      await axios.delete(
        `https://workout-81691-default-rtdb.firebaseio.com/routines/${user.authUser.uid}/${routinesToDelete[i].firebaseId}.json`
      );
    }

    if (routinesToDelete.length) setRoutineDeleted(true);
  };

    useEffect(() => {
    if (lastRecordedWorkout) {
      const { date } = lastRecordedWorkout;
      const dayOfWorkout = new Date(date.year, date.month, date.day).getDay();

      const todayIndex = days[adjustDateForSunday(today)];

      if (todayIndex > dayOfWorkout + 1) {
        console.log(activeRoutine[adjustDateForSunday(todayIndex - 1)]);
      }
    }
  });

    useEffect(() => {
    if (!lastRecordedWorkout)
      axios
        .get(
          `https://workout-81691-default-rtdb.firebaseio.com/recordedWorkouts/${user.authUser.uid}.json`
        )
        .then((res) => {
          if (res.data)
            setLastRecordedWorkout(
              res.data[Object.keys(res.data)[Object.keys(res.data).length - 1]]
            );
        });
  }, [lastRecordedWorkout, user.authUser.uid]);

    const days = [
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
    'Sunday',
  ];